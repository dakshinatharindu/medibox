[
    {
        "id": "9fc70cf43a34da9e",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a88e55d99fec423",
        "type": "ui_tab",
        "name": "Medibox",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "26e5ddc788e77e61",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0c25cce393ada22c",
        "type": "ui_group",
        "name": "Main Buzzer",
        "tab": "0a88e55d99fec423",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6a062b302758abd6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "294a1eee0dddf98a",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "0a88e55d99fec423",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "87270550e434eb03",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "0a88e55d99fec423",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2e6d468ca39b7433",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "0a88e55d99fec423",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "beca1c88f0500908",
        "type": "ui_switch",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Main Switch",
        "tooltip": "Toggle the main buzzer",
        "group": "0c25cce393ada22c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "mi-power_settings_new",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "mi-power_settings_new",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "fb3cab73d66b23a3"
            ]
        ],
        "icon": "font-awesome/fa-power-off"
    },
    {
        "id": "fb3cab73d66b23a3",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Main Switch",
        "rules": [
            {
                "t": "set",
                "p": "main_buzzer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "8ac89e6c867a24a5"
            ]
        ]
    },
    {
        "id": "e289d1a3be4702f9",
        "type": "mqtt out",
        "z": "9fc70cf43a34da9e",
        "name": "MQTT Out",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6a062b302758abd6",
        "x": 1110,
        "y": 120,
        "wires": []
    },
    {
        "id": "1a98b51757a8106e",
        "type": "ui_switch",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Schedule",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "1116c0d9e5f7053e"
            ]
        ]
    },
    {
        "id": "541c2d3fa8c4f6ee",
        "type": "ui_numeric",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Days",
        "tooltip": "Number of days to repeat the Medibox scheduler",
        "group": "294a1eee0dddf98a",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 630,
        "y": 280,
        "wires": [
            [
                "07f0cd8c5a36f0a2"
            ]
        ]
    },
    {
        "id": "3793da67a454e187",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Trigger at 12:00 AM",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "453bdc4399fa7ff2"
            ]
        ]
    },
    {
        "id": "07f0cd8c5a36f0a2",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Days Count",
        "rules": [
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "453bdc4399fa7ff2",
        "type": "function",
        "z": "9fc70cf43a34da9e",
        "name": "Reduce Days Count by 1",
        "func": "let days = flow.get(\"days\");\ndays = Math.max(days-1, 0);\nmsg.payload = days;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"days\", 6)",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "541c2d3fa8c4f6ee"
            ]
        ]
    },
    {
        "id": "b62f4022cb5a36cd",
        "type": "ui_text_input",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 1 Time",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "6a045f37d18b6178"
            ]
        ]
    },
    {
        "id": "40e2022084843a44",
        "type": "ui_switch",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 1 Switch",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 400,
        "wires": [
            [
                "67a2fb872d75478b"
            ]
        ]
    },
    {
        "id": "1116c0d9e5f7053e",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Schedule",
        "rules": [
            {
                "t": "set",
                "p": "schedule",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6a045f37d18b6178",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 1 Time",
        "rules": [
            {
                "t": "set",
                "p": "alarm_1_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "67a2fb872d75478b",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 1 Enable",
        "rules": [
            {
                "t": "set",
                "p": "alarm_1_en",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "db0e512141d04ab9",
        "type": "function",
        "z": "9fc70cf43a34da9e",
        "name": "Process Alarms",
        "func": "let date = new Date();\nlet hour = date.getHours();\nlet minute = date.getMinutes();\nlet schedule = flow.get(\"schedule\");\nlet days = flow.get(\"days\");\n\n// Alarm 1\nlet alarm_1_en = flow.get(\"alarm_1_en\");\nlet alarm_1_date = new Date(flow.get(\"alarm_1_time\"));\n\n// Alarm 2\nlet alarm_2_en = flow.get(\"alarm_2_en\");\nlet alarm_2_date = new Date(flow.get(\"alarm_2_time\"));\n\n// Alarm 3\nlet alarm_3_en = flow.get(\"alarm_3_en\");\nlet alarm_3_date = new Date(flow.get(\"alarm_3_time\"));\n\nconst alarm_hours = [alarm_1_date.getHours(), alarm_2_date.getHours(), alarm_3_date.getHours()];\nconst alarm_minutes = [alarm_1_date.getMinutes(), alarm_2_date.getMinutes(), alarm_3_date.getMinutes()];\nconst alarm_en = [alarm_1_en, alarm_2_en, alarm_3_en];\n\nif (schedule && days > 0) {\n    for (let i = 0; i < 3; i++) {\n        if (alarm_en[i] && alarm_hours[i] == hour && alarm_minutes[i] == minute) {\n            msg.payload = i;\n            return msg;\n        }\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"schedule\", false);\nflow.set(\"alarm_1_time\", 0);\nflow.set(\"alarm_1_en\", false);",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 700,
        "wires": [
            [
                "1ed0e741f7a06f70"
            ]
        ]
    },
    {
        "id": "be35760e88cc36ac",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "190622R/scheduler",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "db0e512141d04ab9"
            ]
        ]
    },
    {
        "id": "7f508048cfb8fc44",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "40e2022084843a44",
                "4565835e8865e793",
                "2568156f3c50e4be"
            ]
        ]
    },
    {
        "id": "a8a2199890b89288",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-19800000",
        "payloadType": "num",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "b62f4022cb5a36cd",
                "bad9bc05f76c72c6",
                "4dfa6ae0b6cf42bd"
            ]
        ]
    },
    {
        "id": "d3eae5795982da24",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "190622R/main_buzzer",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "beca1c88f0500908",
                "1a98b51757a8106e"
            ]
        ]
    },
    {
        "id": "bad9bc05f76c72c6",
        "type": "ui_text_input",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 2 Time",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "87473a252821ee4d"
            ]
        ]
    },
    {
        "id": "4565835e8865e793",
        "type": "ui_switch",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 2 Switch",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 500,
        "wires": [
            [
                "2297b4269b3d0722"
            ]
        ]
    },
    {
        "id": "87473a252821ee4d",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 2 Time",
        "rules": [
            {
                "t": "set",
                "p": "alarm_2_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2297b4269b3d0722",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 2 Enable",
        "rules": [
            {
                "t": "set",
                "p": "alarm_2_en",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "4dfa6ae0b6cf42bd",
        "type": "ui_text_input",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 2 Time",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 560,
        "wires": [
            [
                "7779c0a261738e0d"
            ]
        ]
    },
    {
        "id": "2568156f3c50e4be",
        "type": "ui_switch",
        "z": "9fc70cf43a34da9e",
        "name": "Alarm 2 Switch",
        "label": "",
        "tooltip": "",
        "group": "294a1eee0dddf98a",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 600,
        "wires": [
            [
                "1cc3080926f60b43"
            ]
        ]
    },
    {
        "id": "7779c0a261738e0d",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 3 Time",
        "rules": [
            {
                "t": "set",
                "p": "alarm_3_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1cc3080926f60b43",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Alarm 3 Enable",
        "rules": [
            {
                "t": "set",
                "p": "alarm_3_en",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "856df2095393af2b",
        "type": "link in",
        "z": "9fc70cf43a34da9e",
        "name": "mqtt_out",
        "links": [
            "1ed0e741f7a06f70",
            "8ac89e6c867a24a5"
        ],
        "x": 975,
        "y": 120,
        "wires": [
            [
                "e289d1a3be4702f9"
            ]
        ]
    },
    {
        "id": "8ac89e6c867a24a5",
        "type": "link out",
        "z": "9fc70cf43a34da9e",
        "name": "main_buzzer_out",
        "mode": "link",
        "links": [
            "856df2095393af2b"
        ],
        "x": 715,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ed0e741f7a06f70",
        "type": "link out",
        "z": "9fc70cf43a34da9e",
        "name": "alarm_out",
        "mode": "link",
        "links": [
            "856df2095393af2b"
        ],
        "x": 545,
        "y": 700,
        "wires": []
    },
    {
        "id": "c5a06525e18a0bb1",
        "type": "mqtt in",
        "z": "9fc70cf43a34da9e",
        "name": "MQTT In",
        "topic": "190622R/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6a062b302758abd6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "e652ac6157f67280"
            ]
        ]
    },
    {
        "id": "e652ac6157f67280",
        "type": "switch",
        "z": "9fc70cf43a34da9e",
        "name": "Switch Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "190622R/temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "190622R/humidity",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 1100,
        "wires": [
            [
                "73fe57b19578a7ef"
            ],
            [
                "bc5b12d1d86ac51a"
            ]
        ]
    },
    {
        "id": "b50b5060733d4233",
        "type": "ui_gauge",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "group": "87270550e434eb03",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Gauge",
        "label": "",
        "format": "{{value | number:0}}°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 920,
        "wires": []
    },
    {
        "id": "024815b118e084da",
        "type": "ui_numeric",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Min",
        "tooltip": "",
        "group": "87270550e434eb03",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "f554f64dcb9e68f0"
            ]
        ]
    },
    {
        "id": "0ac361ad6a8a8c59",
        "type": "ui_numeric",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Max",
        "tooltip": "",
        "group": "87270550e434eb03",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 970,
        "y": 1140,
        "wires": [
            [
                "dd29625aee3067a9"
            ]
        ]
    },
    {
        "id": "9b207f8b594f85a6",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 710,
        "y": 920,
        "wires": [
            [
                "b50b5060733d4233",
                "820b9c482bb391ba"
            ]
        ]
    },
    {
        "id": "354407f899f4f629",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "024815b118e084da",
                "f554f64dcb9e68f0"
            ]
        ]
    },
    {
        "id": "36143e21c83b2eb7",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 710,
        "y": 1140,
        "wires": [
            [
                "0ac361ad6a8a8c59",
                "dd29625aee3067a9"
            ]
        ]
    },
    {
        "id": "f554f64dcb9e68f0",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Min Temo",
        "rules": [
            {
                "t": "set",
                "p": "min_temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "dd29625aee3067a9",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Max Temo",
        "rules": [
            {
                "t": "set",
                "p": "max_temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "73fe57b19578a7ef",
        "type": "link out",
        "z": "9fc70cf43a34da9e",
        "name": "temp",
        "mode": "link",
        "links": [
            "b2b41000cb54d856"
        ],
        "x": 450,
        "y": 1060,
        "wires": [],
        "l": true
    },
    {
        "id": "b2b41000cb54d856",
        "type": "link in",
        "z": "9fc70cf43a34da9e",
        "name": "link in 1",
        "links": [
            "73fe57b19578a7ef"
        ],
        "x": 765,
        "y": 960,
        "wires": [
            [
                "b50b5060733d4233",
                "380befb8ce334aa2",
                "820b9c482bb391ba"
            ]
        ]
    },
    {
        "id": "380befb8ce334aa2",
        "type": "function",
        "z": "9fc70cf43a34da9e",
        "name": "Process Temp",
        "func": "let min_temp = flow.get(\"min_temp\");\nlet max_temp = parseInt(flow.get(\"max_temp\"));\nlet temp = parseInt(msg.payload)\n\nif (temp < min_temp) {\n    msg.payload = \"Current Temperature is lower than the Minimum Temperature\";\n    msg.topic = \"Temperature Warning\"\n    return msg;\n} else if (temp > max_temp) {\n    msg.payload = \"Current Temperature is higher than the Maximum Temperature\";\n    msg.topic = \"Temperature Warning\"\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 880,
        "wires": [
            [
                "dcf154f097342287"
            ]
        ]
    },
    {
        "id": "dcf154f097342287",
        "type": "ui_toast",
        "z": "9fc70cf43a34da9e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Temperature Notification",
        "x": 1230,
        "y": 880,
        "wires": []
    },
    {
        "id": "820b9c482bb391ba",
        "type": "ui_chart",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "group": "87270550e434eb03",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9b1cdbdbbfe53971",
        "type": "ui_gauge",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "group": "2e6d468ca39b7433",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Gauge",
        "label": "",
        "format": "{{value | number:0}}%",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5d00755a1bcd1288",
        "type": "ui_numeric",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Min",
        "tooltip": "",
        "group": "2e6d468ca39b7433",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 970,
        "y": 1440,
        "wires": [
            [
                "d38d85ea203ccb05"
            ]
        ]
    },
    {
        "id": "1e6dc296405f246b",
        "type": "ui_numeric",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "label": "Max",
        "tooltip": "",
        "group": "2e6d468ca39b7433",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 970,
        "y": 1560,
        "wires": [
            [
                "bbc78dcc58257bd7"
            ]
        ]
    },
    {
        "id": "cedde505dc5c8436",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 710,
        "y": 1340,
        "wires": [
            [
                "9b1cdbdbbfe53971",
                "8ee368d5e75ce6c2"
            ]
        ]
    },
    {
        "id": "e00cad335cc0b515",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 710,
        "y": 1440,
        "wires": [
            [
                "5d00755a1bcd1288",
                "d38d85ea203ccb05"
            ]
        ]
    },
    {
        "id": "53517cb483dde4e9",
        "type": "inject",
        "z": "9fc70cf43a34da9e",
        "name": "Initial Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 710,
        "y": 1560,
        "wires": [
            [
                "1e6dc296405f246b",
                "bbc78dcc58257bd7"
            ]
        ]
    },
    {
        "id": "d38d85ea203ccb05",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Min Humidity",
        "rules": [
            {
                "t": "set",
                "p": "min_humidity",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "bbc78dcc58257bd7",
        "type": "change",
        "z": "9fc70cf43a34da9e",
        "name": "Set Max Humidity",
        "rules": [
            {
                "t": "set",
                "p": "max_humidity",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "f9a92778bc326a1b",
        "type": "link in",
        "z": "9fc70cf43a34da9e",
        "name": "link in 2",
        "links": [
            "bc5b12d1d86ac51a"
        ],
        "x": 765,
        "y": 1380,
        "wires": [
            [
                "9b1cdbdbbfe53971",
                "1fa5555c9fee0ccd",
                "8ee368d5e75ce6c2"
            ]
        ]
    },
    {
        "id": "1fa5555c9fee0ccd",
        "type": "function",
        "z": "9fc70cf43a34da9e",
        "name": "Process Temp",
        "func": "let min_humidity = flow.get(\"min_humidity\");\nlet max_humidity = parseInt(flow.get(\"max_humidity\"));\nlet humidity = parseInt(msg.payload)\n\nif (humidity < min_humidity) {\n    msg.payload = \"Current Humidity is lower than the Minimum Humidity\";\n    msg.topic = \"Humidity Warning\"\n    return msg;\n} else if (humidity > max_humidity) {\n    msg.payload = \"Current Humidity is higher than the Maximum Humidity\";\n    msg.topic = \"Humidity Warning\"\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1300,
        "wires": [
            [
                "3fadb1c17ec634ff"
            ]
        ]
    },
    {
        "id": "3fadb1c17ec634ff",
        "type": "ui_toast",
        "z": "9fc70cf43a34da9e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Humidity Notification",
        "x": 1220,
        "y": 1300,
        "wires": []
    },
    {
        "id": "8ee368d5e75ce6c2",
        "type": "ui_chart",
        "z": "9fc70cf43a34da9e",
        "name": "",
        "group": "2e6d468ca39b7433",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "bc5b12d1d86ac51a",
        "type": "link out",
        "z": "9fc70cf43a34da9e",
        "name": "humidity",
        "mode": "link",
        "links": [
            "f9a92778bc326a1b"
        ],
        "x": 460,
        "y": 1140,
        "wires": [],
        "l": true
    }
]